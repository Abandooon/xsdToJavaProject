package stdgui.data.model.orimodel;

@XmlType(name="ABSTRACT-EVENT--SUBTYPES-ENUM")
@XmlEnum
public enum AbstractEventSubtypesEnum {

@XmlEnumValue("ABSTRACT-EVENT")
ABSTRACT_EVENT("ABSTRACT-EVENT"),

@XmlEnumValue("ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT")
ASYNCHRONOUS_SERVER_CALL_RETURNS_EVENT("ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"),

@XmlEnumValue("BACKGROUND-EVENT")
BACKGROUND_EVENT("BACKGROUND-EVENT"),

@XmlEnumValue("BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT")
BSW_ASYNCHRONOUS_SERVER_CALL_RETURNS_EVENT("BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"),

@XmlEnumValue("BSW-BACKGROUND-EVENT")
BSW_BACKGROUND_EVENT("BSW-BACKGROUND-EVENT"),

@XmlEnumValue("BSW-DATA-RECEIVED-EVENT")
BSW_DATA_RECEIVED_EVENT("BSW-DATA-RECEIVED-EVENT"),

@XmlEnumValue("BSW-EVENT")
BSW_EVENT("BSW-EVENT"),

@XmlEnumValue("BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT")
BSW_EXTERNAL_TRIGGER_OCCURRED_EVENT("BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT"),

@XmlEnumValue("BSW-INTERNAL-TRIGGER-OCCURRED-EVENT")
BSW_INTERNAL_TRIGGER_OCCURRED_EVENT("BSW-INTERNAL-TRIGGER-OCCURRED-EVENT"),

@XmlEnumValue("BSW-MODE-MANAGER-ERROR-EVENT")
BSW_MODE_MANAGER_ERROR_EVENT("BSW-MODE-MANAGER-ERROR-EVENT"),

@XmlEnumValue("BSW-MODE-SWITCH-EVENT")
BSW_MODE_SWITCH_EVENT("BSW-MODE-SWITCH-EVENT"),

@XmlEnumValue("BSW-MODE-SWITCHED-ACK-EVENT")
BSW_MODE_SWITCHED_ACK_EVENT("BSW-MODE-SWITCHED-ACK-EVENT"),

@XmlEnumValue("BSW-OPERATION-INVOKED-EVENT")
BSW_OPERATION_INVOKED_EVENT("BSW-OPERATION-INVOKED-EVENT"),

@XmlEnumValue("BSW-SCHEDULE-EVENT")
BSW_SCHEDULE_EVENT("BSW-SCHEDULE-EVENT"),

@XmlEnumValue("BSW-TIMING-EVENT")
BSW_TIMING_EVENT("BSW-TIMING-EVENT"),

@XmlEnumValue("DATA-RECEIVE-ERROR-EVENT")
DATA_RECEIVE_ERROR_EVENT("DATA-RECEIVE-ERROR-EVENT"),

@XmlEnumValue("DATA-RECEIVED-EVENT")
DATA_RECEIVED_EVENT("DATA-RECEIVED-EVENT"),

@XmlEnumValue("DATA-SEND-COMPLETED-EVENT")
DATA_SEND_COMPLETED_EVENT("DATA-SEND-COMPLETED-EVENT"),

@XmlEnumValue("DATA-WRITE-COMPLETED-EVENT")
DATA_WRITE_COMPLETED_EVENT("DATA-WRITE-COMPLETED-EVENT"),

@XmlEnumValue("EXTERNAL-TRIGGER-OCCURRED-EVENT")
EXTERNAL_TRIGGER_OCCURRED_EVENT("EXTERNAL-TRIGGER-OCCURRED-EVENT"),

@XmlEnumValue("INIT-EVENT")
INIT_EVENT("INIT-EVENT"),

@XmlEnumValue("INTERNAL-TRIGGER-OCCURRED-EVENT")
INTERNAL_TRIGGER_OCCURRED_EVENT("INTERNAL-TRIGGER-OCCURRED-EVENT"),

@XmlEnumValue("MODE-SWITCHED-ACK-EVENT")
MODE_SWITCHED_ACK_EVENT("MODE-SWITCHED-ACK-EVENT"),

@XmlEnumValue("OPERATION-INVOKED-EVENT")
OPERATION_INVOKED_EVENT("OPERATION-INVOKED-EVENT"),

@XmlEnumValue("RTE-EVENT")
RTE_EVENT("RTE-EVENT"),

@XmlEnumValue("SWC-MODE-MANAGER-ERROR-EVENT")
SWC_MODE_MANAGER_ERROR_EVENT("SWC-MODE-MANAGER-ERROR-EVENT"),

@XmlEnumValue("SWC-MODE-SWITCH-EVENT")
SWC_MODE_SWITCH_EVENT("SWC-MODE-SWITCH-EVENT"),

@XmlEnumValue("TIMING-EVENT")
TIMING_EVENT("TIMING-EVENT"),

@XmlEnumValue("TRANSFORMER-HARD-ERROR-EVENT")
TRANSFORMER_HARD_ERROR_EVENT("TRANSFORMER-HARD-ERROR-EVENT");


    private final java.lang.String value;

    AbstractEventSubtypesEnum(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static AbstractEventSubtypesEnum fromValue(java.lang.String v) {
        for (AbstractEventSubtypesEnum c: AbstractEventSubtypesEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}