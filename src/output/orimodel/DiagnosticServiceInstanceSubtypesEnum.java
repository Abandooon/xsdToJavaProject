package stdgui.data.model.orimodel;

@XmlType(name="DIAGNOSTIC-SERVICE-INSTANCE--SUBTYPES-ENUM")
@XmlEnum
public enum DiagnosticServiceInstanceSubtypesEnum {

@XmlEnumValue("DIAGNOSTIC-CLEAR-DIAGNOSTIC-INFORMATION")
DIAGNOSTIC_CLEAR_DIAGNOSTIC_INFORMATION("DIAGNOSTIC-CLEAR-DIAGNOSTIC-INFORMATION"),

@XmlEnumValue("DIAGNOSTIC-COM-CONTROL")
DIAGNOSTIC_COM_CONTROL("DIAGNOSTIC-COM-CONTROL"),

@XmlEnumValue("DIAGNOSTIC-CONTROL-DTC-SETTING")
DIAGNOSTIC_CONTROL_DTC_SETTING("DIAGNOSTIC-CONTROL-DTC-SETTING"),

@XmlEnumValue("DIAGNOSTIC-DATA-BY-IDENTIFIER")
DIAGNOSTIC_DATA_BY_IDENTIFIER("DIAGNOSTIC-DATA-BY-IDENTIFIER"),

@XmlEnumValue("DIAGNOSTIC-DATA-TRANSFER")
DIAGNOSTIC_DATA_TRANSFER("DIAGNOSTIC-DATA-TRANSFER"),

@XmlEnumValue("DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER")
DIAGNOSTIC_DYNAMICALLY_DEFINE_DATA_IDENTIFIER("DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER"),

@XmlEnumValue("DIAGNOSTIC-ECU-RESET")
DIAGNOSTIC_ECU_RESET("DIAGNOSTIC-ECU-RESET"),

@XmlEnumValue("DIAGNOSTIC-IO-CONTROL")
DIAGNOSTIC_IO_CONTROL("DIAGNOSTIC-IO-CONTROL"),

@XmlEnumValue("DIAGNOSTIC-MEMORY-ADDRESSABLE-RANGE-ACCESS")
DIAGNOSTIC_MEMORY_ADDRESSABLE_RANGE_ACCESS("DIAGNOSTIC-MEMORY-ADDRESSABLE-RANGE-ACCESS"),

@XmlEnumValue("DIAGNOSTIC-MEMORY-BY-ADDRESS")
DIAGNOSTIC_MEMORY_BY_ADDRESS("DIAGNOSTIC-MEMORY-BY-ADDRESS"),

@XmlEnumValue("DIAGNOSTIC-READ-DTC-INFORMATION")
DIAGNOSTIC_READ_DTC_INFORMATION("DIAGNOSTIC-READ-DTC-INFORMATION"),

@XmlEnumValue("DIAGNOSTIC-READ-DATA-BY-IDENTIFIER")
DIAGNOSTIC_READ_DATA_BY_IDENTIFIER("DIAGNOSTIC-READ-DATA-BY-IDENTIFIER"),

@XmlEnumValue("DIAGNOSTIC-READ-DATA-BY-PERIODIC-ID")
DIAGNOSTIC_READ_DATA_BY_PERIODIC_ID("DIAGNOSTIC-READ-DATA-BY-PERIODIC-ID"),

@XmlEnumValue("DIAGNOSTIC-READ-MEMORY-BY-ADDRESS")
DIAGNOSTIC_READ_MEMORY_BY_ADDRESS("DIAGNOSTIC-READ-MEMORY-BY-ADDRESS"),

@XmlEnumValue("DIAGNOSTIC-REQUEST-DOWNLOAD")
DIAGNOSTIC_REQUEST_DOWNLOAD("DIAGNOSTIC-REQUEST-DOWNLOAD"),

@XmlEnumValue("DIAGNOSTIC-REQUEST-FILE-TRANSFER")
DIAGNOSTIC_REQUEST_FILE_TRANSFER("DIAGNOSTIC-REQUEST-FILE-TRANSFER"),

@XmlEnumValue("DIAGNOSTIC-REQUEST-UPLOAD")
DIAGNOSTIC_REQUEST_UPLOAD("DIAGNOSTIC-REQUEST-UPLOAD"),

@XmlEnumValue("DIAGNOSTIC-RESPONSE-ON-EVENT")
DIAGNOSTIC_RESPONSE_ON_EVENT("DIAGNOSTIC-RESPONSE-ON-EVENT"),

@XmlEnumValue("DIAGNOSTIC-ROUTINE-CONTROL")
DIAGNOSTIC_ROUTINE_CONTROL("DIAGNOSTIC-ROUTINE-CONTROL"),

@XmlEnumValue("DIAGNOSTIC-SECURITY-ACCESS")
DIAGNOSTIC_SECURITY_ACCESS("DIAGNOSTIC-SECURITY-ACCESS"),

@XmlEnumValue("DIAGNOSTIC-SERVICE-INSTANCE")
DIAGNOSTIC_SERVICE_INSTANCE("DIAGNOSTIC-SERVICE-INSTANCE"),

@XmlEnumValue("DIAGNOSTIC-SESSION-CONTROL")
DIAGNOSTIC_SESSION_CONTROL("DIAGNOSTIC-SESSION-CONTROL"),

@XmlEnumValue("DIAGNOSTIC-TRANSFER-EXIT")
DIAGNOSTIC_TRANSFER_EXIT("DIAGNOSTIC-TRANSFER-EXIT"),

@XmlEnumValue("DIAGNOSTIC-WRITE-DATA-BY-IDENTIFIER")
DIAGNOSTIC_WRITE_DATA_BY_IDENTIFIER("DIAGNOSTIC-WRITE-DATA-BY-IDENTIFIER"),

@XmlEnumValue("DIAGNOSTIC-WRITE-MEMORY-BY-ADDRESS")
DIAGNOSTIC_WRITE_MEMORY_BY_ADDRESS("DIAGNOSTIC-WRITE-MEMORY-BY-ADDRESS");


    private final java.lang.String value;

    DiagnosticServiceInstanceSubtypesEnum(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static DiagnosticServiceInstanceSubtypesEnum fromValue(java.lang.String v) {
        for (DiagnosticServiceInstanceSubtypesEnum c: DiagnosticServiceInstanceSubtypesEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}