package {{ packageName }};

public class {{ wrapperClassName }} {

    private {{ originalClassName }} {{ originalVariableName }};

    public {{ wrapperClassName }}({{ originalClassName }} {{ originalVariableName }}) {
        this.{{ originalVariableName }} = {{ originalVariableName }};
    }

    {% for attribute in attributes %}
    public {{ attribute.type }} get{{ attribute.name[0]|upper + attribute.name[1:] }}() {
        {% if 'Wrapper' in attribute.type %}
        if ({{ originalVariableName }}.get{{ attribute.name[0]|upper + attribute.name[1:] }}() != null) {
            return new {{ attribute.type }}({{ originalVariableName }}.get{{ attribute.name[0]|upper + attribute.name[1:] }}());
        } else {
            return null;
        }
        {% else %}
        return {{ originalVariableName }}.get{{ attribute.name[0]|upper + attribute.name[1:] }}();
        {% endif %}
    }
    {% endfor %}

    {% if hasArrayListSerializable %}
    public String getValue() {
        ArrayList<Serializable> serializables = {{ originalVariableName }}.getContent();
        StringBuilder textContent = new StringBuilder();
        for (Serializable item : serializables) {
            if (item instanceof String) {
                textContent.append((String) item);
            }
        }
        return textContent.toString().trim();
    }
    {% endif %}
}
